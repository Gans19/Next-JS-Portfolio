import Head from "next/head";
import Curve from "@/components/Layout/Curve";
import Logo from "./../assets/3.jpeg";
import Selva from "./../assets/Selva.png";
import Image from "next/image";
import { useEffect, useRef } from "react";
import {
  motion,
  useScroll,
  useSpring,
  useTransform,
  useMotionValue,
  useVelocity,
  useAnimationFrame,
  wrap,
} from "framer-motion";
import Link from "next/link";


const CircularText = ({ text = "SELVA GANESH", radius = 100 }) => {
  const circleContainerRef = useRef(null);

  useEffect(() => {
    const container = circleContainerRef.current;
    const characters = text.split("");
    const angle = 360 / characters.length;

    // Clear any existing children
    container.innerHTML = "";

    characters.forEach((char, i) => {
      const span = document.createElement("span");
      span.textContent = char;
      span.style.position = "absolute";
      span.style.transform = `rotate(${i * angle}deg) translate(${radius}px) rotate(-${i * angle}deg)`;
      container.appendChild(span);
    });
  }, [text, radius]);

  return (
    <div className="circle-container">
      <div className="circle-text" ref={circleContainerRef}></div>
    </div>
  );
};

function ParallaxText({ children, baseVelocity = 100 }) {
  const baseX = useMotionValue(0);
  const { scrollY } = useScroll();
  const scrollVelocity = useVelocity(scrollY);
  const smoothVelocity = useSpring(scrollVelocity, {
    damping: 50,
    stiffness: 400,
  });
  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {
    clamp: false,
  });

  const x = useTransform(baseX, (v) => `${wrap(-20, -45, v)}%`);

  const directionFactor = useRef(1);
  useAnimationFrame((t, delta) => {
    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);

    if (velocityFactor.get() < 0) {
      directionFactor.current = -1;
    } else if (velocityFactor.get() > 0) {
      directionFactor.current = 1;
    }

    moveBy += directionFactor.current * moveBy * velocityFactor.get();

    baseX.set(baseX.get() + moveBy);
  });

  return (
    <div className="parallax">
      <motion.div className="scroller" style={{ x }}>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
      </motion.div>
    </div>
  );
}

export default function Home() {
  const container = {
    hidden: { opacity: 1, scale: 0 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        delayChildren: 0.1,
        staggerChildren: 0.3,
      },
    },
  };

  const item = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
    },
  };

  const name = "Selva Ganesh G"
    .split("")
    .map((char) => (char === " " ? "\u00A0" : char));

  return (
    <>
      <Head>
        <title>Selva Ganesh Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Curve>
        <div className="body h-[95vh]   flex flex-col justify-center">
          <div className=" flex flex-row  w-full h-full">
            <div className=" flex flex-col h-full w-[65%] mr-10">
              <div className=" w-full flex justify-around flex-row h-[30%] p-4 rounded-xl bg-white">
                <div className=" h-full bg-red border-r  w-[30%]">
                  <div className=" h-[100%] w-[100%]">
               <Image src={Selva} className=" object-cover h-[100%] w-[100%]"  alt="" />
                  </div>
                </div>
                <div className="  h-full w-[70%] flex flex-col mx-8">
                  <div className="  w-full h-[50%] flex justify-end   text-right">
                    <p className="tracking-widest font-[orbitron] text-black  h-[100%] flex justify-start items-center w-[100%] text-[54px]  text-right uppercase">
                      SELVA
                    </p>
                  </div>
                  <div className="  w-full h-[50%] flex justify-end   text-right">
                    <p className="tracking-widest font-[orbitron] text-black  h-[100%] flex justify-end items-center w-[100%] text-[54px]  text-right uppercase">
                      Ganesh G
                    </p>
                  </div>
                </div>
              </div>

              <div className=" w-full h-[70%] py-4 flex flex-row ">
<div className=' rounded-xl bg-white w-[50%] h-full mr-2  '></div>
<div className=' w-[50%] h-full ml-2 flex flex-col'>
  <div className="  w-full h-[50%] rounded-xl bg-white mb-2"></div>
  <div className="  w-full h-[50%] rounded-xl bg-white mt-2"></div>
</div>

              </div>
            </div>
            <div className=" bg-slate-700 h-full w-[35%]"></div>
          </div>
          <div className="mt-4 ">
            <ParallaxText baseVelocity={-5}>Software Developer</ParallaxText>
            <ParallaxText baseVelocity={5}>Mobile App Developer</ParallaxText>
          </div>
        </div>
      </Curve>
    </>
  );
}
