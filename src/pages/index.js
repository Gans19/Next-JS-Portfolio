import Head from "next/head";
import Curve from "@/components/Layout/Curve";
import Logo from "./../assets/3.jpeg";
import Image from "next/image";
import { useRef } from "react";
import {
  motion,
  useScroll,
  useSpring,
  useTransform,
  useMotionValue,
  useVelocity,
  useAnimationFrame,
  wrap,
} from "framer-motion";
// import { wrap } from "@motionone/utils";
import Link from "next/link";

function ParallaxText({ children, baseVelocity = 100 }) {
  const baseX = useMotionValue(0);
  const { scrollY } = useScroll();
  const scrollVelocity = useVelocity(scrollY);
  const smoothVelocity = useSpring(scrollVelocity, {
    damping: 50,
    stiffness: 400,
  });
  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {
    clamp: false,
  });

  /**
   * This is a magic wrapping for the length of the text - you
   * have to replace for wrapping that works for you or dynamically
   * calculate
   */
  const x = useTransform(baseX, (v) => `${wrap(-20, -45, v)}%`);

  const directionFactor = useRef(1);
  useAnimationFrame((t, delta) => {
    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);

    /**
     * This is what changes the direction of the scroll once we
     * switch scrolling directions.
     */
    if (velocityFactor.get() < 0) {
      directionFactor.current = -1;
    } else if (velocityFactor.get() > 0) {
      directionFactor.current = 1;
    }

    moveBy += directionFactor.current * moveBy * velocityFactor.get();

    baseX.set(baseX.get() + moveBy);
  });

  /**
   * The number of times to repeat the child text should be dynamically calculated
   * based on the size of the text and viewport. Likewise, the x motion value is
   * currently wrapped between -20 and -45% - this 25% is derived from the fact
   * we have four children (100% / 4). This would also want deriving from the
   * dynamically generated number of children.
   */
  return (
    <div className="parallax">
      <motion.div className="scroller" style={{ x }}>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
      </motion.div>
    </div>
  );
}

export default function Home() {

  


  const container = {
    hidden: { opacity: 1, scale: 0 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        delayChildren: 0.1,
        staggerChildren: 0.3,
      },
    },
  };

  const item = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
    },
  };

  const name = "Selva Ganesh G".split("").map(char => char === " " ? "\u00A0" : char);

  return (
    <>
      <Head>
        <title>Selva Ganesh Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Curve>
        <div className="body">
          <div className="flex flex-col md:flex-row  justify-around items-center h-full md:px-8 w-full">
            <motion.div
              className="md:order-2 flex w-[100%]  md:w-[50%]  justify-center  z-10 mt-20 md:mt-16"
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ delay: 1.5, duration: 1 }}
            >
              <div class="card-wrapper h-[350px] w-[450px] md:h-[500px] md:w-[400px]">
                <div class="card-content flex items-center justify-center text-xs">
                  <Image
                    alt="logo"
                    className=" rounded-2xl object-cover h-[calc(100%-1px)]"
                    src={Logo}
                  />
                </div>
              </div>

              {/* <div className="card-wrapper h-[300px] w-[250px] md:h-[450px] md:w-[400px]">
                <div className="card-content flex items-center justify-center text-xs">
                  <Image alt="logo"  src={Logo} />
                </div>
              </div> */}
            </motion.div>

            {/* main section */}
            <div className="z-30 b w-[50%] mt-6 md:mt-40 flex flex-col items-center text-center md:text-left">
              {/* Heading section */}
              <motion.div
                variants={container}
                initial="hidden"
                animate="visible"
              >
                <div className="z-30 b  mt-6 md:mt-40 flex flex-col items-center text-center md:text-left">
                  <motion.div
                    variants={container}
                    initial="hidden"
                    animate="visible"
                  >
                    <p className="text-2xl font-mono font-extrabold  md:text-6xl z-10">
                      {name.map((char, index) => (
                        <motion.span
                          key={index}
                          className="inline-block  font-mono"
                          variants={item}
                        >
                          {char}
                        </motion.span>
                      ))}
                    </p>
                  </motion.div>
                </div>

                {/* <p className="text-4xl  font-mono font-extrabold md:text-6xl z-10">
                  Selva
                  <span className="xs:relative text-white font-mono font-extrabold z-20 before:absolute before:-left-[25px] before:-top-[70px] before:z-[-1]">
                    {" "}
                    Ganesh G
                  </span>
                </p> */}
                {/* <p className="mt-4 md:mt-10 mb-4 md:mb-7 text-sm md:text-base">
                  Software Engineer
                </p> */}
              </motion.div>

              {/* call to action section */}
              <motion.div
                className="flex flex-col md:flex-row items-center mt-5 md:justify-start"
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, amount: 0.5 }}
                transition={{ delay: 0.2, duration: 0.5 }}
                variants={{
                  hidden: { opacity: 0, x: -50 },
                  visible: { opacity: 1, x: 0 },
                }}
              >
                <a
                  className="bg-gradient-rainblue text-deep-blue rounded-sm py-3 px-7 font-semibold hover:bg-blue hover:text-white transition duration-500 mb-4 md:mb-0 "
                  href="https://drive.google.com/file/d/1CW4NAQRwqvVXvxzlEQkkCBg668V5o6Zj/view?usp=sharing"
                  target="_blank"
                >
                  Download CV
                </a>
                <Link
                  className="rounded-r-sm bg-gradient-rainblue py-0.5 pr-0.5"
                  // onClick={() => setSelectedPage("projects")}
                  href="/contact"
                >
                  <div className="bg-deep-blue hover:text-red text-white transition duration-500 py-2.5 w-full h-full flex items-center justify-center px-10 font-playfair">
                    See Projects
                  </div>
                </Link>
              </motion.div>

              <motion.div
                className="flex mt-5 justify-center md:justify-start"
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, amount: 0.5 }}
                transition={{ delay: 0.4, duration: 0.5 }}
                variants={{
                  hidden: { opacity: 0, x: -50 },
                  visible: { opacity: 1, x: 0 },
                }}
              >
                {/* <SocialMediaIcons /> */}
              </motion.div>
            </div>
          </div>
        </div>
        <div className=" mt-4">
          <ParallaxText baseVelocity={-5}>Software developer</ParallaxText>
          <ParallaxText baseVelocity={5}>Mobile App Developer</ParallaxText>
          {/* <ParallaxText baseVelocity={5}>Scroll velocity</ParallaxText> */}
        </div>
      </Curve>
    </>
  );
}
