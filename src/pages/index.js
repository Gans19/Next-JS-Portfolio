import Head from "next/head";
import Curve from "@/components/Layout/Curve";
import Logo from "./../assets/3.jpeg";
import Image from "next/image";
import { useRef } from "react";
import {
  motion,
  useScroll,
  useSpring,
  useTransform,
  useMotionValue,
  useVelocity,
  useAnimationFrame,
  wrap,
} from "framer-motion";
import Link from "next/link";

function ParallaxText({ children, baseVelocity = 100 }) {
  const baseX = useMotionValue(0);
  const { scrollY } = useScroll();
  const scrollVelocity = useVelocity(scrollY);
  const smoothVelocity = useSpring(scrollVelocity, {
    damping: 50,
    stiffness: 400,
  });
  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {
    clamp: false,
  });

  const x = useTransform(baseX, (v) => `${wrap(-20, -45, v)}%`);

  const directionFactor = useRef(1);
  useAnimationFrame((t, delta) => {
    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);

    if (velocityFactor.get() < 0) {
      directionFactor.current = -1;
    } else if (velocityFactor.get() > 0) {
      directionFactor.current = 1;
    }

    moveBy += directionFactor.current * moveBy * velocityFactor.get();

    baseX.set(baseX.get() + moveBy);
  });

  return (
    <div className="parallax">
      <motion.div className="scroller" style={{ x }}>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
        <span>{children} </span>
      </motion.div>
    </div>
  );
}

export default function Home() {
  const container = {
    hidden: { opacity: 1, scale: 0 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        delayChildren: 0.1,
        staggerChildren: 0.3,
      },
    },
  };

  const item = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
    },
  };

  const name = "Selva Ganesh G".split("").map(char => char === " " ? "\u00A0" : char);

  return (
    <>
      <Head>
        <title>Selva Ganesh Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Curve>
        <div className="body h-screen flex flex-col justify-center">
          <div className="flex flex-col md:flex-row justify-around items-center h-full w-full">
            <motion.div
              className="md:order-2 flex w-full md:w-1/2 justify-center z-10 mt-4 md:mt-4"
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ delay: 1.5, duration: 1 }}
            >
              <div className="card-wrapper h-[350px] w-[450px] md:h-[500px] md:w-[400px]">
                <div className="card-content flex items-center justify-center text-xs">
                  <Image
                    alt="logo"
                    className="rounded-2xl object-cover h-[calc(100%-1px)]"
                    src={Logo}
                  />
                </div>
              </div>
            </motion.div>

            <div className="z-30 w-full md:w-1/2 mt-6 md:mt-4 flex flex-col items-center text-center md:text-left">
              <motion.div
                variants={container}
                initial="hidden"
                animate="visible"
              >
                <p className="text-2xl md:text-6xl font-mono font-extrabold z-10">
                  {name.map((char, index) => (
                    <motion.span
                      key={index}
                      className="inline-block font-mono"
                      variants={item}
                    >
                      {char}
                    </motion.span>
                  ))}
                </p>
              </motion.div>

              <motion.div
                className="flex flex-col md:flex-row items-center mt-5 md:justify-start"
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, amount: 0.5 }}
                transition={{ delay: 0.2, duration: 0.5 }}
                variants={{
                  hidden: { opacity: 0, x: -50 },
                  visible: { opacity: 1, x: 0 },
                }}
              >
                <a
                  className="bg-gradient-rainblue text-deep-blue rounded-sm py-3 px-7 font-semibold hover:bg-blue hover:text-white transition duration-500 mb-4 md:mb-0"
                  href="https://drive.google.com/file/d/1CW4NAQRwqvVXvxzlEQkkCBg668V5o6Zj/view?usp=sharing"
                  target="_blank"
                >
                  Download CV
                </a>
                <Link
                  className="rounded-r-sm bg-gradient-rainblue py-0.5 pr-0.5"
                  href="/contact"
                >
                  <div className="bg-deep-blue hover:text-red text-white transition duration-500 py-2.5 w-full h-full flex items-center justify-center px-10 font-playfair">
                    See Projects
                  </div>
                </Link>
              </motion.div>

              <motion.div
                className="flex mt-5 justify-center md:justify-start"
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, amount: 0.5 }}
                transition={{ delay: 0.4, duration: 0.5 }}
                variants={{
                  hidden: { opacity: 0, x: -50 },
                  visible: { opacity: 1, x: 0 },
                }}
              >
                {/* SocialMediaIcons Component */}
              </motion.div>
            </div>
          </div>
        </div>
        {/* <div className="mt-2">
          <ParallaxText baseVelocity={-5}>Software Developer</ParallaxText>
          <ParallaxText baseVelocity={5}>Mobile App Developer</ParallaxText>
        </div> */}
      </Curve>
    </>
  );
}
